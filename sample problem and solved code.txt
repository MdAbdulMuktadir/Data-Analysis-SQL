SQL PROJECT- MUSIC STORE DATA ANALYSIS
Question Set 1 - Easy
1. Who is the senior most employee based on job title?
2. Which countries have the most Invoices?
3. What are top 3 values of total invoice?
4. Which city has the best customers? We would like to throw a promotional Music Festival in the city we made the most money. Write a query that returns one city that has the highest sum of invoice totals. Return both the city name & sum of all invoice totals
5. Who is the best customer? The customer who has spent the most money will be declared the best customer. Write a query that returns the person who has spent the most money


Question Set 2 – Moderate
1. Write query to return the email, first name, last name, & Genre of all Rock Music listeners. Return your list ordered alphabetically by email starting with A
--> Query:
select distinct email, first_name, last_name from customer cr
join invoice on cr.customer_id = invoice.customer_id
join invoice_line on invoice.invoice_id = invoice_line.invoice_id
join track on invoice_line.track_id = track.track_id
join genre on track.genre_id = genre.genre_id
where genre.name like 'Rock'
order by cr.email

2. Let's invite the artists who have written the most rock music in our dataset. Write a query that returns the Artist name and total track count of the top 10 rock bands
--> Query:
select artist.artist_id, artist.name, count(artist.artist_id) as number_of_song
from track
join genre on track.genre_id = genre.genre_id
join album on track.album_id = album.album_id
join artist on album.artist_id = artist.artist_id
where genre.name like 'Rock'
group by artist.artist_id
order by number_of_song desc
limit 10

3. Return all the track names that have a song length longer than the average song length. Return the Name and Milliseconds for each track. Order by the song length with the longest songs listed first
-->Query:
select name, milliseconds from track
where 
milliseconds > (select avg(milliseconds) as avg_length from track)
order by milliseconds desc


Question Set 3 – Advance
1. Find how much amount spent by each customer on artists? Write a query to return customer name, artist name and total spent
-->Query:
with max_sale as
(
select artist.artist_id, artist.name, sum(il.unit_price*il.quantity) as m_spent 
from invoice_line as il
join track on il.track_id = track.track_id
join album on track.album_id = album.album_id
join artist on album.artist_id = artist.artist_id
group by 1
order by m_spent desc
limit 1
)
select cs.customer_id, cs.first_name,cs.last_name, max_sale.name artist_name, 
sum(il.unit_price*il.quantity) as spent
from customer as cs
join invoice on cs.customer_id = invoice.customer_id
join invoice_line il on il.invoice_id = invoice.invoice_id
join track on il.track_id = track.track_id
join album on track.album_id = album.album_id
join max_sale on album.artist_id = max_sale.artist_id
group by 1,2,3,4
order by spent desc


2. We want to find out the most popular music Genre for each country. We determine the most popular genre as the genre with the highest amount of purchases. Write a query that returns each country along with the top Genre. For countries where the maximum number of purchases is shared return all Genres
--> Query:
with aaa as (
select customer.country, count(il.quantity) purchase, genre.name genre,
row_number() over(partition by customer.country order by count(il.quantity) desc) as RN
from invoice_line as il
join track t on il.track_id=t.track_id
join genre on t.genre_id = genre.genre_id
join invoice on il.invoice_id=invoice.invoice_id
join customer on invoice.customer_id=customer.customer_id
group by 1,3
order by 1 asc ,2 desc
)
select * from aaa
where rn<=1


3. Write a query that determines the customer that has spent the most on music for each country. Write a query that returns the country along with the top customer and how much they spent. For countries where the top amount spent is shared, provide all customers who spent this amount
--> Query:
with country_customer as (
select c.customer_id,first_name,last_name,country, sum(total) spent,
row_number() over (partition by c.country order by sum(total)desc) as rn
from invoice as i
join customer c on i.customer_id = c.customer_id
group by 1,2,3,4
order by 4 asc, 5 desc
)
select * from country_customer
where rn <=1